# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# Poetry
poetry.lock
# Uncomment below if you want to commit poetry.lock
# !poetry.lock

# pyenv
.python-version

# pipenv
Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control

# pdm
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# FastAPI specific
.env
.env.local
.env.production
.env.staging
.env.test
fastapi_sessions/
uploads/
static/uploads/

# Database
*.db
*.sqlite
*.sqlite3
database.db
app.db

# Logs
*.log
logs/
log/

# API Keys and Secrets
secrets.json
config/secrets.py
.secrets
api_keys.txt

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Docker
.dockerignore
Dockerfile.dev
docker-compose.override.yml

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# AWS
.aws/

# Machine Learning / Data Science
*.pkl
*.pickle
*.joblib
*.h5
*.hdf5
models/
checkpoints/
wandb/
mlruns/
.mlflow/
*.onnx
*.pt
*.pth

# Data files (add specific patterns for your project)
data/raw/
data/processed/
*.csv
*.tsv
*.json
*.parquet
*.feather
!sample_data.csv  # Keep sample data

# Jupyter Notebook specific
.ipynb_checkpoints/
*/.ipynb_checkpoints/*
.jupyter/
jupyter_config/

# Backup files
*.bak
*.backup
*.orig

# Temporary files
tmp/
temp/
.tmp/

# Local development
local/
.local/
dev/
development/

# Documentation builds
docs/_build/
docs/build/
site/

# Coverage reports
htmlcov/
.coverage
coverage.xml

# Profiling
*.prof

# Memory dumps
*.hprof

# Application specific (customize for your project)
uploads/
downloads/
cache/
.cache/
storage/